#! NX/KF 4.0 - Curved rail demo v0.5 (can be adapted for the rail) - Curved_Rail_general.dfa
DefClass:Curved_Rail_ (ug_base_part);
# Set of default parameters for the part
(number parameter) rail_width: 167;
(number parameter) rail_height: 291;
(number parameter) rail_base_height: 11.167;
(number parameter) rail_wall_width: 6.604;

(number parameter) x: 0;
(number parameter) y: 0;
(number parameter) z: 0;

(number parameter) rotX: 1;
(number parameter) rotY: 1;
(number parameter) rotZ: 1;

#Forming a profile for the rail
#Forming a profile for the rail
(Child) line_1: {
 Class, ug_line;
 Start_Point, Point(x:,y:,z:);
 End_Point, Point(x:+rail_width:,y:,z:);
};

(Child) line_2: {
 Class, ug_line;
 Start_Point, Point(x:+rail_width:,y:,z:);
 End_Point, Point(x:+rail_width:,y:,z:+rail_base_height:);
};

(Child) line_3: {
 Class, ug_line;
 Start_Point, Point(x:+rail_width:,y:,z:+rail_base_height:);
 End_Point, Point(x:+(rail_width:/2)+(rail_wall_width:/2),y:,z:+rail_base_height:);
};

(Child) line_4: {
 Class, ug_line;
 Start_Point, Point(x:+(rail_width:/2)+(rail_wall_width:/2),y:,z:+rail_base_height:);
 End_Point, Point(x:+(rail_width:/2)+(rail_wall_width:/2),y:,z:+rail_base_height:+rail_height:);
};

(Child) line_5: {
 Class, ug_line;
 Start_Point, Point(x:+(rail_width:/2)+(rail_wall_width:/2),y:,z:+rail_base_height:+rail_height:);
 End_Point, Point(x:+rail_width:,y:,z:+rail_base_height:+rail_height:);
};

(Child) line_6: {
 Class, ug_line;
 Start_Point, Point(x:+rail_width:,y:,z:+rail_base_height:+rail_height:);
 End_Point, Point(x:+rail_width:,y:,z:+(rail_base_height:*2)+rail_height:);
};

(Child) line_7: {
 Class, ug_line;
 Start_Point, Point(x:+rail_width:,y:,z:+(rail_base_height:*2)+rail_height:);
 End_Point, Point(x:,y:,z:+(rail_base_height:*2)+rail_height:);
};

(Child) line_8: {
 Class, ug_line;
 Start_Point, Point(x:,y:,z:+rail_base_height:*2+rail_height:);
 End_Point, Point(x:,y:,z:+rail_base_height:+rail_height:);
};

(Child) line_9: {
 Class, ug_line;
 Start_Point, Point(x:,y:,z:+rail_base_height:+rail_height:);
 End_Point, Point(x:+(rail_width:/2)-(rail_wall_width:/2),y:,z:+rail_base_height:+rail_height:);
};

(Child) line_10: {
 Class, ug_line;
 Start_Point, Point(x:+(rail_width:/2)-(rail_wall_width:/2),y:,z:+rail_base_height:+rail_height:);
 End_Point, Point(x:+(rail_width:/2)-(rail_wall_width:/2),y:,z:+rail_base_height:);
};

(Child) line_11: {
 Class, ug_line;
 Start_Point, Point(x:+(rail_width:/2)-(rail_wall_width:/2),y:,z:+rail_base_height:);
 End_Point, Point(x:,y:,z:+rail_base_height:);
};

(Child) line_12: {
 Class, ug_line;
 Start_Point, Point(x:,y:,z:+rail_base_height:);
 End_Point, Point(x:,y:,z:);
};

#Elements of the path start to form


(Child) line_rail_path_1: {
 Class, ug_line;
 Start_Point, Point(1500,7500,0);
 End_Point, Point(12500,7500,0);
};



#The curved rail


(child) rail_profile: {
  Class, ug_curve_join;
  profile, {line_1:, line_2:, line_3:, line_4:,line_5:,line_6:,line_7:,line_8:,line_9:,line_10:,line_11:,line_12:};
};
(child) rail_path: {
  Class, ug_curve_join;
  profile, {line_rail_path_1:,};
};
(child) rail_1: {
  class, ug_swept;
  guide, {{forward, rail_path:}};
  section, {{forward, rail_profile:}};
  scaling, {scale_constant, 1};
  alignment_init, parameter;
  orientation, {orientation_fixed};
  tolerances, {0, 0, 0};
};

# Colored rail - emulating the "rail"
(Child) rail_colored:
{
  Class, ug_body;
  Feature, {rail_1:};
  Layer, 1;
  color, ug_askClosestColor(RED);
};


(Child) beam_0: {
	Class, ug_cylinder;
	Diameter, 150;
	Height, 3000;
	Origin, Point(1500, 7500, 290);
	Direction, Vector(0,0,1);
};

(Child) beam_1: {
	Class, ug_cylinder;
	Diameter, 150;
	Height, 3000;
	Origin, Point(12500, 7500, 290);
	Direction, Vector(0,0,1);
};